/**
 * Created by kikkomep on 12/2/15.
 */
define("qtype_omerocommon/moodle-forms-utils",
    ['jquery'],
    function ($) {
        // Private functions.


        // Public functions
        return {
            initialize: function (str) {

                // defines the basic package
                M.qtypes = M.qtypes || {};

                // defines the specific package of this module
                M.qtypes.omerocommon = M.qtypes.omerocommon || {};


                /**
                 * Defines MoodleFormUtils class
                 * @type {{}}
                 */
                M.qtypes.omerocommon.MoodleFormUtils = function () {

                    var me = this;

                    // the list elements added by this utility class
                    me._dynamic_elements = {};

                    /**
                     * Dynamically appends a new element to a given fieldset,
                     * assigning a label to it
                     *
                     * @param fieldset_container_id
                     * @param label the label to assign to the element
                     * @param element html || jQuery element
                     */
                    me.appendElementToFieldSet = function (fieldset_container_id,
                                                           label, element) {
                        var element_obj = $(element);
                        var fieldSetContainer = $("#" + fieldset_container_id + " div.fcontainer");

                        // Checks whether the fieldset exists or not
                        if (!fieldset_container_id.length) {
                            console.error("FieldSet " + fieldset_container_id + " not found!!!");
                        }

                        // checks the existing id (or generates it)
                        if (!(element_obj.attr("id")))
                            element_obj.attr("id", me._generateGuid());

                        // builds the root element to append to the fieldset
                        var newFieldContainerId = me._generateGuid();
                        var newFieldContainer = $('<div class="fitem" id="' + newFieldContainerId + '"></div>');

                        // sets the id of the wrapped element
                        newFieldContainer.attr("container-of", element_obj.attr("id"));

                        // appends inner content
                        newFieldContainer.html([
                            '<div class="fitemtitle"><label for="' + element_obj.attr("id") + '">' + label + '</label></div>',
                            '<div class="felement">',
                            element_obj.get(0).outerHTML,
                            '</div>'
                        ].join(" "));

                        // appends the element
                        fieldSetContainer.append(newFieldContainer);
                        // updates the list elements generated by this utility instance
                        me._dynamic_elements[element_obj.attr("id")] = newFieldContainer;

                        // returns the element created
                        return newFieldContainer;
                    };


                    /**
                     * Removes the an element previously added to a fieldset using this utility class
                     *
                     * @param fieldset_container_id
                     * @param element_id
                     */
                    me.removeElementFromFieldSet = function (element_id) {
                        var el = $("#" + element_id);

                        if (!el.length) {
                            console.error("Element " + element_id + " doesn't exist");
                            return false;
                        }

                        el.parent().parent().remove();

                        // Removes the elements from the list of added elements
                        // when the 'remove' event occurs
                        delete me._dynamic_elements[element_id];
                        return true;
                    };


                    /**
                     * Private function to generate a UUID to identify HTML elements
                     *
                     * @returns {string}
                     * @private
                     */
                    me._generateGuid = function () {
                        function s4() {
                            return Math.floor((1 + Math.random()) * 0x10000)
                                .toString(16)
                                .substring(1);
                        }

                        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
                            s4() + '-' + s4() + s4() + s4();
                    }




                    $('[data-toggle="popover"]').popover();


                    $("#enableModal").click(function () {
                        $('#myModal').modal();
                        //$('#myInput').focus();
                    });


                    $(".dropdown-toggle").dropdown();

                    //$('#username').editable({
                    //
                    //    success: function (response, newValue) {
                    //        alert("Changed: !!!");
                    //    }
                    //});
                };
            }
        };
    }
);